// global reset
@import "../../node_modules/meyer-reset-scss/reset-src";

// VARS
$accent: #915fee;

// TYPOGRAPHY ==================================================================

html,
body {
  font-size: 10px;
  scroll-behavior: smooth;
  color: white;
}

body {
  background-color: #050509;
}

h1 {
  font-size: 6.866455078125em;
}

h2 {
  font-size: 5.4931640625em;
}

h3 {
  font-size: 4.39453125em;
}

h4 {
  font-size: 3.515625em;
}

h5 {
  font-size: 2.8125em;
}

h6 {
  font-size: 2.25em;
}

h1,
h2,
h3,
h4 {
  line-height: 7rem;
}

h5,
h6 {
  line-height: 3.5rem;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-style: italic;
  font-weight: 900;
  margin-bottom: 3.5rem;
  font-family: "Montserrat", sans-serif;
  hyphens: auto;
  word-wrap: break-word;
}

div[class*="CardContainer__"] {
  h4[class*="NoMarginHeader__"] {
    // Squish card headers together everywhere
    line-height: 5rem;
  }
}

p {
  margin-bottom: 3.5rem;
  font-family: "Fira Sans", sans-serif;
  font-size: 1.8em;
  line-height: 3.5rem;
  font-weight: 400;
  font-style: normal;
  hyphens: none;
  word-wrap: break-word;
}

a {
  color: $accent;
  text-decoration: none;
  &:hover {
    color: #fff;
  }
}

ul {
  list-style-type: disc;
  padding-left: 10px;
  margin-left: 15px;
  margin-bottom: 3.5rem;
  li {
    @extend p;
    margin: 0;
    text-align: left;
  }
}

ol {
  list-style-type: decimal;
  padding-left: 10px;
  margin-left: 15px;
  margin-bottom: 3.5rem;
  li {
    @extend p;
    margin: 0;
  }
}

figcaption {
  @extend p;
  text-align: center;
}

em {
  font-style: italic;
}

// CODE HIGHLIGHTING ===========================================================

pre[class*="language-"] {
  background-color: transparent;
  width: 85%;
  max-width: 100%;
  font-size: 1.8em;
  margin: 0 auto;
  margin-bottom: 3.5em;
}

code {
  border-radius: 10px;
  font-family: monospace;
  border: 1px solid $accent;
  padding: 0.5rem 1rem;
  margin: 0 0.5rem;
  white-space: nowrap;
}

pre {
  border-radius: 10px;
  padding: 1rem;
  border: 1px solid $accent;
  font-size: 1.8em;
  margin-bottom: 3.5em;
  color: inherit;
  code {
    border: 0;
    padding: 0;
    margin: 0;
  }
}

:not(pre) > code[class*="language-"] {
  border-radius: 10px;
  background-color: rgba(0, 0, 0, 0);
  padding: 0.5rem 1rem;
}

//  LAYOUT =====================================================================

html {
  max-width: 100%;
  overflow-x: hidden;
}

body {
  max-width: 100vw;
  overflow-x: hidden;
}

// FIXME - I probably could do this with a component but I don't understand
// the errors I'm getting just yet
.flex-sideways {
  display: flex;
  justify-content: space-between;
  width: 75%;
  max-width: 50vw;
  margin: 0 auto;
  a {
    @extend h5;
  }
  @media screen and (max-width: 768px) {
    flex-direction: column;
    text-align: center;
    a {
      flex-grow: 2;
      width: 100%;
    }
  }
}

// FIXME: Hero links being popped out into their own component meant that their props (i.e. to="") weren't being passed to Gatsby correctly
.hero-link {
  color: white;
  text-transform: uppercase;
  font-family: "Fira Sans", sans-serif !important;
  align-self: flex-start; /* make links be width of themselves, not container */
  text-decoration: none;
}

// FIXME: have card containing area  in own component
.work__card-container {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

.blog {
  p {
    img {
      width: 100%;
    }
  }
}

.full-width {
  left: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
  max-width: 100vw;
  position: relative;
  right: 50%;
  width: 100vw;
  max-height: 475px;
  overflow: hidden;
}

.accent {
  color: $accent;
}

p {
  a {
    svg {
      height: 1em;
      width: 1em;
      top: 0.125em;
      position: relative;
    }
  }
}
