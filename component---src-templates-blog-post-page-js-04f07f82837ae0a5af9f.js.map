{"version":3,"sources":["webpack:///./src/components/Typography/Decoration/BlinkingTerminalCursor.js","webpack:///./src/components/Layout/Blog Posts/BlogPostHeader.js","webpack:///./src/components/Layout/Blog Posts/BlogPostFooter.js","webpack:///./src/templates/BlogPostPage.js"],"names":["blinkKeyframes","keyframes","StyledBlinkingTerminalCursor","styled","className","children","BlogPostHeader","data","Section","NoMarginParagraph","markdownRemark","parent","name","timeToRead","frontmatter","date","prettySize","to","StyledBlogPostFooter","query","StyledBlogPostPage","location","post","Helmet","lang","charSet","title","content","excerpt","dangerouslySetInnerHTML","__html","html"],"mappings":"mMAQMA,EAAiBC,YAAH,oDAcLC,EALsBC,aAdN,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,UAAyB,EAAdC,SAC1C,OAAO,0BAAMD,UAAWA,GAAjB,QAayB,uGAAGD,CAAH,sDAEnBH,GCQAM,EAnBQ,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACvB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,8BAAOF,EAAKG,eAAeC,OAAOC,KAAlC,OACA,8BAAOL,EAAKG,eAAeG,WAA3B,gBACA,8BAAON,EAAKG,eAAeI,YAAYC,MACvC,8BAAOR,EAAKG,eAAeC,OAAOK,YAClC,8BACE,kBAAC,OAAD,CAAMC,GAAG,UACP,gDACA,kBAAC,EAAD,WCYGC,EALcf,aAjBN,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UACvB,OACE,kBAACI,EAAA,EAAD,CAASJ,UAAWA,GAClB,kBAACK,EAAA,EAAD,iBAEG,KACD,8BACE,kBAAC,OAAD,CAAMQ,GAAG,UACP,gDACA,kBAAC,EAAD,aAQc,2FAAGd,CAAH,iCC1B1B,sCASA,IAwBagB,EAAK,aAuBZC,EAAqBjB,aA/CN,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,UAAWG,EAAoB,EAApBA,KAAMc,EAAc,EAAdA,SAChCC,EAAOf,EAAKG,eAClB,OACE,0BAAMN,UAAcA,EAAL,SACb,kBAACmB,EAAA,OAAD,KACE,0BAAMC,KAAK,UACX,0BAAMC,QAAQ,UACd,+BACMH,EAAKR,YAAYY,MADvB,2CAGA,0BAAMd,KAAK,cAAce,QAASpB,EAAKG,eAAekB,WAExD,kBAAC,EAAD,CAAgBP,SAAUA,EAAUd,KAAMA,IAC1C,kBAACC,EAAA,EAAD,KACE,6BACE,4BAAKc,EAAKR,YAAYY,OACtB,yBAAKG,wBAAyB,CAACC,OAAQR,EAAKS,UAGhD,kBAAC,EAAD,UA4BkB,kFAAG5B,CAAH,MAETiB","file":"component---src-templates-blog-post-page-js-04f07f82837ae0a5af9f.js","sourcesContent":["import React from 'react'\nimport styled, {keyframes} from 'styled-components'\n\nconst BlinkingTerminalCursor = ({className, children}) => {\n  return <span className={className}>â–Ž</span>\n}\n\n// Create the keyframes\nconst blinkKeyframes = keyframes`\n  from, to {\n    color: transparent;\n  }\n  50% {\n    color: inherit;\n  }\n`\n\nconst StyledBlinkingTerminalCursor = styled(BlinkingTerminalCursor)`\n  display: inline-block;\n  animation: ${blinkKeyframes} 1.5s infinite;\n`\n\nexport default StyledBlinkingTerminalCursor\n","import React from 'react'\nimport {Link} from 'gatsby'\n\nimport Section from '../Section'\nimport NoMarginParagraph from '../../Typography/Utility/NoMarginParagraph'\n// eslint-disable-next-line\nimport BlinkingTerminalCursor from '../../Typography/Decoration/BlinkingTerminalCursor'\n\nconst BlogPostHeader = ({data}) => {\n  return (\n    <Section>\n      <NoMarginParagraph>\n        <code>{data.markdownRemark.parent.name}.md</code>\n        <code>{data.markdownRemark.timeToRead} minute read</code>\n        <code>{data.markdownRemark.frontmatter.date}</code>\n        <code>{data.markdownRemark.parent.prettySize}</code>\n        <code>\n          <Link to='/#work'>\n            <kbd>$ cd ../ && ls </kbd>\n            <BlinkingTerminalCursor />\n          </Link>\n        </code>\n      </NoMarginParagraph>\n    </Section>\n  )\n}\n\nexport default BlogPostHeader\n","import React from 'react'\nimport {Link} from 'gatsby'\nimport styled from 'styled-components'\n\nimport Section from '../Section'\nimport NoMarginParagraph from '../../Typography/Utility/NoMarginParagraph'\n// eslint-disable-next-line\nimport BlinkingTerminalCursor from '../../Typography/Decoration/BlinkingTerminalCursor'\n\nconst BlogPostFooter = ({className}) => {\n  return (\n    <Section className={className}>\n      <NoMarginParagraph>\n        All done?\n        {'  '}\n        <code>\n          <Link to='/#blog'>\n            <kbd>$ cd ../ && ls </kbd>\n            <BlinkingTerminalCursor />\n          </Link>\n        </code>\n      </NoMarginParagraph>\n    </Section>\n  )\n}\n\nconst StyledBlogPostFooter = styled(BlogPostFooter)`\n  text-align: right;\n  color: red;\n`\n\nexport default StyledBlogPostFooter\n","import React from 'react'\nimport {graphql} from 'gatsby'\nimport styled from 'styled-components'\nimport {Helmet} from 'react-helmet'\n\nimport Section from '../components/Layout/Section'\nimport BlogPostHeader from '../components/Layout/Blog Posts/BlogPostHeader'\nimport BlogPostFooter from '../components/Layout/Blog Posts/BlogPostFooter'\n\nconst BlogPostPage = ({className, data, location}) => {\n  const post = data.markdownRemark\n  return (\n    <main className={`${className} blog`}>\n      <Helmet>\n        <html lang='en-au' />\n        <meta charSet='utf-8' />\n        <title>\n          {`${post.frontmatter.title} | <kayak /> | Web Developer & Designer`}\n        </title>\n        <meta name='description' content={data.markdownRemark.excerpt} />\n      </Helmet>\n      <BlogPostHeader location={location} data={data} />\n      <Section>\n        <div>\n          <h1>{post.frontmatter.title}</h1>\n          <div dangerouslySetInnerHTML={{__html: post.html}} />\n        </div>\n      </Section>\n      <BlogPostFooter />\n    </main>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: {slug: {eq: $slug}}) {\n      html\n      frontmatter {\n        title\n        date\n      }\n      timeToRead\n      wordCount {\n        words\n      }\n      parent {\n        ... on File {\n          prettySize\n          name\n        }\n      }\n      excerpt\n    }\n  }\n`\n\nconst StyledBlogPostPage = styled(BlogPostPage)``\n\nexport default StyledBlogPostPage\n"],"sourceRoot":""}